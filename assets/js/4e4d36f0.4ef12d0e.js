(self.webpackChunksite=self.webpackChunksite||[]).push([[8826],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=l(r),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5710:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return d}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i=["components"],p={},c=void 0,l={unversionedId:"react-api/interfaces/badgeprops",id:"react-api/interfaces/badgeprops",isDocsHomePage:!1,title:"badgeprops",description:"@mezzanine-ui/react - v0.5.2 / Exports / BadgeProps",source:"@site/docs/react-api/interfaces/badgeprops.md",sourceDirName:"react-api/interfaces",slug:"/react-api/interfaces/badgeprops",permalink:"/test-mz-doc.github.io/docs/react-api/interfaces/badgeprops",editUrl:"https://github.com/Mezzanine-UI/mezzanine/tree/main/docs/react-api/interfaces/badgeprops.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"autocompletevaluecontrol",permalink:"/test-mz-doc.github.io/docs/react-api/interfaces/autocompletevaluecontrol"},next:{title:"buttongroupprops",permalink:"/test-mz-doc.github.io/docs/react-api/interfaces/buttongroupprops"}},s=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"dot",id:"dot",children:[]},{value:"overflowCount",id:"overflowcount",children:[]}]}],u={toc:s};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/test-mz-doc.github.io/docs/react-api/README"},"@mezzanine-ui/react - v0.5.2")," / ",(0,o.kt)("a",{parentName:"p",href:"/test-mz-doc.github.io/docs/react-api/modules"},"Exports")," / BadgeProps"),(0,o.kt)("h1",{id:"interface-badgeprops"},"Interface: BadgeProps"),(0,o.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,o.kt)("a",{parentName:"p",href:"/test-mz-doc.github.io/docs/react-api/modules#nativeelementpropswithoutkeyandref"},(0,o.kt)("inlineCode",{parentName:"a"},"NativeElementPropsWithoutKeyAndRef")),"<",(0,o.kt)("inlineCode",{parentName:"p"},'"span"'),">",", ",(0,o.kt)("inlineCode",{parentName:"p"},'"color"'),">"),(0,o.kt)("p",{parentName:"li"},"\u21b3 ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"BadgeProps"))))),(0,o.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,o.kt)("h3",{id:"properties"},"Properties"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/badgeprops#dot"},"dot")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/badgeprops#overflowcount"},"overflowCount"))),(0,o.kt)("h2",{id:"properties-1"},"Properties"),(0,o.kt)("h3",{id:"dot"},"dot"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"dot"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean")),(0,o.kt)("p",null,"It ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),", ignore passed children and display as a dot."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"default"))," false"),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Badge/Badge.tsx#L11"},"packages/react/src/Badge/Badge.tsx:11")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"overflowcount"},"overflowCount"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},"overflowCount"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("p",null,'If the children is number and greater than overflowCount, it will show overflowCount suffixed with a "+".'),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"default"))," 99"),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Badge/Badge.tsx#L16"},"packages/react/src/Badge/Badge.tsx:16")))}d.isMDXComponent=!0}}]);