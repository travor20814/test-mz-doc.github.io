(self.webpackChunksite=self.webpackChunksite||[]).push([[9938],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return k},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},k=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),c=d(a),m=r,u=c["".concat(o,".").concat(m)]||c[m]||s[m]||i;return a?n.createElement(u,l(l({ref:t},k),{},{components:a})):n.createElement(u,l({ref:t},k))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1576:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return k},default:function(){return c}});var n=a(2122),r=a(9756),i=(a(7294),a(3905)),l=["components"],p={},o=void 0,d={unversionedId:"react-api/interfaces/calendarweeksprops",id:"react-api/interfaces/calendarweeksprops",isDocsHomePage:!1,title:"calendarweeksprops",description:"@mezzanine-ui/react - v0.5.2 / Exports / CalendarWeeksProps",source:"@site/docs/react-api/interfaces/calendarweeksprops.md",sourceDirName:"react-api/interfaces",slug:"/react-api/interfaces/calendarweeksprops",permalink:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarweeksprops",editUrl:"https://github.com/Mezzanine-UI/mezzanine/tree/main/docs/react-api/interfaces/calendarweeksprops.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"calendarprops",permalink:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarprops"},next:{title:"calendaryearsprops",permalink:"/test-mz-doc.github.io/docs/react-api/interfaces/calendaryearsprops"}},k=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"referenceDate",id:"referencedate",children:[]},{value:"displayWeekDayLocale",id:"displayweekdaylocale",children:[]},{value:"isWeekDisabled",id:"isweekdisabled",children:[]},{value:"isWeekInRange",id:"isweekinrange",children:[]},{value:"onClick",id:"onclick",children:[]},{value:"onWeekHover",id:"onweekhover",children:[]},{value:"value",id:"value",children:[]}]}],s={toc:k};function c(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/test-mz-doc.github.io/docs/react-api/README"},"@mezzanine-ui/react - v0.5.2")," / ",(0,i.kt)("a",{parentName:"p",href:"/test-mz-doc.github.io/docs/react-api/modules"},"Exports")," / CalendarWeeksProps"),(0,i.kt)("h1",{id:"interface-calendarweeksprops"},"Interface: CalendarWeeksProps"),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Pick"),"<",(0,i.kt)("a",{parentName:"p",href:"/test-mz-doc.github.io/docs/react-api/interfaces/calendardayofweekprops"},(0,i.kt)("inlineCode",{parentName:"a"},"CalendarDayOfWeekProps")),", ",(0,i.kt)("inlineCode",{parentName:"p"},'"displayWeekDayLocale"'),">")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,i.kt)("a",{parentName:"p",href:"/test-mz-doc.github.io/docs/react-api/modules#nativeelementpropswithoutkeyandref"},(0,i.kt)("inlineCode",{parentName:"a"},"NativeElementPropsWithoutKeyAndRef")),"<",(0,i.kt)("inlineCode",{parentName:"p"},'"div"'),">",", ",(0,i.kt)("inlineCode",{parentName:"p"},'"onClick"')," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},'"children"'),">"),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"CalendarWeeksProps"))))),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarweeksprops#referencedate"},"referenceDate")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarweeksprops#displayweekdaylocale"},"displayWeekDayLocale")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarweeksprops#isweekdisabled"},"isWeekDisabled")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarweeksprops#isweekinrange"},"isWeekInRange")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarweeksprops#onclick"},"onClick")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarweeksprops#onweekhover"},"onWeekHover")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/test-mz-doc.github.io/docs/react-api/interfaces/calendarweeksprops#value"},"value"))),(0,i.kt)("h2",{id:"properties-1"},"Properties"),(0,i.kt)("h3",{id:"referencedate"},"referenceDate"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"referenceDate"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Moment")),(0,i.kt)("p",null,"The refernce date for getting the dates of calendar."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Calendar/CalendarWeeks.tsx#L39"},"packages/react/src/Calendar/CalendarWeeks.tsx:39")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"displayweekdaylocale"},"displayWeekDayLocale"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"displayWeekDayLocale"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"The locale you want to use when rendering the name of week day.\nIf none provided, it will use the ",(0,i.kt)("inlineCode",{parentName:"p"},"displayWeekDayLocale")," from calendar context."),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,"Pick.displayWeekDayLocale"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Calendar/CalendarDayOfWeek.tsx#L16"},"packages/react/src/Calendar/CalendarDayOfWeek.tsx:16")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isweekdisabled"},"isWeekDisabled"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"isWeekDisabled"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"date"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Moment"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"date"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Provide if you have a custom disabling logic.\nThe method takes the date object of first date in week as its parameter."),(0,i.kt)("h5",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"date")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Moment"))))),(0,i.kt)("h5",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Calendar/CalendarWeeks.tsx#L20"},"packages/react/src/Calendar/CalendarWeeks.tsx:20")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isweekinrange"},"isWeekInRange"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"isWeekInRange"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"firstDateOfWeek"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Moment"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"firstDateOfWeek"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Provide if you have a custom logic for checking if the week is in range.\nThe method takes the date object of first date in week as its parameter."),(0,i.kt)("h5",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"firstDateOfWeek")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Moment"))))),(0,i.kt)("h5",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Calendar/CalendarWeeks.tsx#L25"},"packages/react/src/Calendar/CalendarWeeks.tsx:25")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onclick"},"onClick"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"onClick"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"date"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Moment"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"type-declaration-2"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"date"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Click handler for the button of week row.\nThe method takes the date object of first date in week as its parameter."),(0,i.kt)("h5",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"date")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Moment"))))),(0,i.kt)("h5",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Calendar/CalendarWeeks.tsx#L30"},"packages/react/src/Calendar/CalendarWeeks.tsx:30")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"onweekhover"},"onWeekHover"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"onWeekHover"),": (",(0,i.kt)("inlineCode",{parentName:"p"},"firstDateOfWeek"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Moment"),") => ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"type-declaration-3"},"Type declaration"),(0,i.kt)("p",null,"\u25b8 (",(0,i.kt)("inlineCode",{parentName:"p"},"firstDateOfWeek"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Mouse enter handler for the button of week row.\nThe method takes the date object of first date in week as its parameter."),(0,i.kt)("h5",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"firstDateOfWeek")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Moment"))))),(0,i.kt)("h5",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Calendar/CalendarWeeks.tsx#L35"},"packages/react/src/Calendar/CalendarWeeks.tsx:35")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"value"},"value"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"value"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Moment"),"[]"),(0,i.kt)("p",null,"The week will be marked as active if the first date of week matches the same date of any value in the array."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mezzanine-UI/mezzanine/blob/83e0173/packages/react/src/Calendar/CalendarWeeks.tsx#L43"},"packages/react/src/Calendar/CalendarWeeks.tsx:43")))}c.isMDXComponent=!0}}]);